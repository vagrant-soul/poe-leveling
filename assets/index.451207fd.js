import{areas as a,quests as I,killWaypoints as g}from"./index.cbd84c18.js";function _(e,r,t){return e.length!=1?u:{fragment:{type:"trial"}}}function v(e,r,t){if(e.length!=2)return u;const n="Labyrinth_Airlock";if(a[t.currentAreaId].id!=n)return`must be in "${a[n].name}"`;const o=a[t.lastTownAreaId];return f(r,t,o),{fragment:{type:"ascend",version:e[1]}}}function E(e,r,t){{if(e.length<2)return u;const n=e[1],i=I[n];if(!i)return"invalid quest id";let o;if(e.length==2)o=i.reward_offers.map((c,s)=>s);else{o=[];for(let c=2;c<e.length;c++){const s=Number.parseInt(e[c]);o.push(s)}}return{fragment:{type:"quest",questId:e[1],rewardOffers:o}}}}function m(e,r,t){return e.length!=2?u:{fragment:{type:"quest_text",value:e[1]}}}function W(e,r,t){const n=/(\s*#.*)|([^{#]+)|\{(.+?)\}/g;let i=[];const o=e.matchAll(n);for(const s of o){if(s[1])continue;const d=s[2];d&&i.push(d);const y=s[3];if(y){const h=y.split("|");i.push(h)}}const c={type:"fragment_step",parts:[]};for(const s of i)if(typeof s=="string")c.parts.push(s);else{const l=L(s,r,t);typeof l=="string"?console.log(`${l}: ${s}`):c.parts.push(l.fragment)}return c}function f(e,r,t){t.is_town_area&&(r.lastTownAreaId=t.id,t.has_waypoint&&r.implicitWaypoints.add(t.id)),r.currentAreaId=t.id}function x(e,r,t){if(e.length!=2)return u;const n=e[1],i=g[n];if(i)for(const o of i)t.implicitWaypoints.add(o);return{fragment:{type:"kill",value:n}}}function R(e,r,t){return e.length!=2?u:{fragment:{type:"arena",value:e[1]}}}function q(e,r,t){if(e.length!=2)return u;const n=a[e[1]];return n?{fragment:{type:"area",areaId:n.id}}:p}function S(e,r,t){if(e.length!=2)return u;const n=a[e[1]];return n?n.connection_ids.some(i=>i==t.currentAreaId)?(f(r,t,n),{fragment:{type:"enter",areaId:n.id}}):"not connected to current area":p}function b(e,r,t){if(e.length!=1)return u;const n=a[t.lastTownAreaId];return f(r,t,n),t.portalAreaId=null,{fragment:{type:"logout",areaId:n.id}}}function k(e,r,t){{if(e.length!=1&&e.length!=2)return u;let n=null;if(e.length==2){const i=a[e[1]];if(!i)return p;if(!t.implicitWaypoints.has(i.id)&&!t.explicitWaypoints.has(i.id))return"missing target waypoint";const o=a[t.currentAreaId];if(!o.has_waypoint)return A;t.implicitWaypoints.add(o.id),t.usedWaypoints.add(i.id),n=i.id,f(r,t,i)}return{fragment:{type:"waypoint",areaId:n}}}}function w(e,r,t){if(e.length!=1)return u;const n=a[t.currentAreaId];return n?n.has_waypoint?t.implicitWaypoints.has(n.id)?"waypoint already acquired":(t.explicitWaypoints.add(n.id),{fragment:{type:"get_waypoint"}}):A:p}function N(e,r,t){if(e.length!=2)return u;const n=a[t.currentAreaId];switch(e[1]){case"set":return n.is_town_area?"portal cannot be set":(t.portalAreaId=t.currentAreaId,{fragment:{type:"portal"}});case"use":{if(t.portalAreaId!=n.id&&!n.is_town_area&&(t.portalAreaId=n.id),!t.portalAreaId)return"portal not set";const i=a[t.portalAreaId];if(n.id==i.id){const o=r.towns[n.act],c=a[o];f(r,t,c),t.portalAreaId=t.currentAreaId}else if(n.id==r.towns[i.act])f(r,t,i),t.portalAreaId=null;else return"can only use portal from town or portal area";return{fragment:{type:"portal",targetAreaId:t.currentAreaId}}}}return u}function O(e,r,t){return e.length!=2?u:{fragment:{type:"generic",value:e[1]}}}function T(e,r,t){if(e.length>2)return u;let n;if(e.length==1)n=a[t.currentAreaId];else if(n=a[e[1]],!n)return p;return t.craftingAreas.add(n.id),{fragment:{type:"crafting",crafting_recipes:n.crafting_recipes}}}function M(e,r,t){if(e.length!=2)return u;const n=Number.parseFloat(e[1]);if(Number.isNaN(n))return"dir value is not a number";let i=n%360;return i<0&&(i+=360),i%45!=0?"dir value must be in intervals of 45":{fragment:{type:"dir",dirIndex:Math.floor(i/45)}}}const u="invalid format",p="area does not exist",A="area does not have a waypoint";function L(e,r,t){switch(e[0]){case"kill":return x(e,r,t);case"arena":return R(e);case"area":return q(e);case"enter":return S(e,r,t);case"logout":return b(e,r,t);case"waypoint":return k(e,r,t);case"get_waypoint":return w(e,r,t);case"portal":return N(e,r,t);case"quest":return E(e);case"quest_text":return m(e);case"generic":return O(e);case"trial":return _(e);case"ascend":return v(e,r,t);case"crafting":return T(e,r,t);case"dir":return M(e)}return u}function G(e,r,t){const n=[];for(const i of e){const o=i.split(/(?:\r\n|\r|\n)/g),c=[];for(const s of o){if(!s)continue;const l=W(s,r,t);l.parts.length>0&&c.push(l)}n.push(c)}for(const i of t.explicitWaypoints)t.usedWaypoints.has(i)||console.log(`unused waypoint ${i}`);for(const i in a){const o=a[i];o.crafting_recipes.length>0&&!t.craftingAreas.has(o.id)&&console.log(`missing crafting area ${o.id}, ${o.crafting_recipes.join(", ")}`)}return n}function z(){const e={towns:{}};for(const r in a){const t=a[r];t.is_town_area&&(e.towns[t.act]=t.id)}return e}function D(){return{implicitWaypoints:new Set,explicitWaypoints:new Set,usedWaypoints:new Set,craftingAreas:new Set,currentAreaId:"1_1_1",lastTownAreaId:"1_1_town",portalAreaId:null,acquiredGems:new Set}}export{z as initializeRouteLookup,D as initializeRouteState,G as parseRoute};
